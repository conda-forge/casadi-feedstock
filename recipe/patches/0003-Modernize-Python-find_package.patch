From d0a1bc3849cd0154a99c826948262cb5aa8e8a40 Mon Sep 17 00:00:00 2001
From: Joris Vaillant <joris.vaillant@inria.fr>
Date: Wed, 29 May 2024 16:32:35 +0200
Subject: [PATCH 03/05] Modernize Python find_package

* Use find_package(python) instead of deprecated ones
* Use python_add_library to setup the right soabi suffix
* Fix SWIG_EXPORT installation
---
 CMakeLists.txt             |  3 +-
 swig/python/CMakeLists.txt | 73 ++++----------------------------------
 2 files changed, 9 insertions(+), 67 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7a383b8b4..871190d89 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -407,7 +407,8 @@ else()
     if (WITH_PYTHON3)
       set(PYTHON_VERSION_REQ "3")
     endif()
-    find_package(PythonInterp ${PYTHON_VERSION_REQ} REQUIRED)
+    find_package(Python ${PYTHON_VERSION_REQ} COMPONENTS Interpreter REQUIRED)
+    set(PYTHON_EXECUTABLE ${Python_EXECUTABLE})
     execute_process ( COMMAND ${PYTHON_EXECUTABLE} -c "from __future__ import print_function; from distutils.sysconfig import get_python_lib; print(get_python_lib())"
       OUTPUT_VARIABLE PYTHON_SITE_PACKAGES OUTPUT_STRIP_TRAILING_WHITESPACE)
     set(DEF_PYTHON_PREFIX ${PYTHON_SITE_PACKAGES})
diff --git a/swig/python/CMakeLists.txt b/swig/python/CMakeLists.txt
index fb17569b0..90b3f00c6 100644
--- a/swig/python/CMakeLists.txt
+++ b/swig/python/CMakeLists.txt
@@ -27,43 +27,7 @@ if(APPLE)
   endif()
 endif()
 
-function(CasadiGetPythonVersionMajor VERSION_MAJOR_RESULT INCLUDE_PATH)
-  set(MATCH_STRING "#define[ \t]+PY_MAJOR_VERSION[ \t]+([0-9]+)")
-  file(STRINGS "${INCLUDE_PATH}/patchlevel.h" PY_MAJOR_VERSION REGEX ${MATCH_STRING})
-  string(REGEX REPLACE "${MATCH_STRING}" "\\1" PYTHON_VERSION_MAJOR "${PY_MAJOR_VERSION}")
-  set(${VERSION_MAJOR_RESULT} ${PYTHON_VERSION_MAJOR} PARENT_SCOPE)
-endfunction()
-
-if(SWIG_EXPORT)
-  if(WITH_PYTHON3)
-    set(PYTHON_VERSION_MAJOR 3)
-  else()
-    set(PYTHON_VERSION_MAJOR 2)
-  endif()
-else()
-  if(PYTHON_INCLUDE_DIR)
-    set(PYTHON_INCLUDE_PATH ${PYTHON_INCLUDE_DIR})
-  else()
-    # Find packages
-    if(WITH_PYTHON3)
-    set(MINPYVERSION "3")
-    else()
-    set(MINPYVERSION "")
-    endif()
-
-    # We don't really need the libs, but the headers.
-    find_package(PythonInterp ${MINPYVERSION})
-    find_package(PythonLibs ${MINPYVERSION})
-    if(NOT PYTHON_INCLUDE_PATH)
-      message(SEND_ERROR "Python include headers not found, but required." )
-    endif()
-  endif()
-  
-  CasadiGetPythonVersionMajor(PYTHON_VERSION_MAJOR "${PYTHON_INCLUDE_PATH}")
-  include_directories(${PYTHON_INCLUDE_PATH})
-  
-  
-endif()
+find_package(Python COMPONENTS Development REQUIRED)
 
 include_directories(${CMAKE_CURRENT_SOURCE_DIR})
 
@@ -86,10 +50,10 @@ if(WITH_PYTHON_GIL_RELEASE)
   set(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} "-threads")
   set(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} "-DCASADI_WITH_PYTHON_GIL_RELEASE")
 endif()
-if("${PYTHON_VERSION_MAJOR}" STREQUAL "3")
-set(PYTHONFLAG "3")
-set(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} "-py3")
-set(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} "-DWITH_PYTHON3")
+if("${Python_VERSION_MAJOR}" STREQUAL "3")
+  set(PYTHONFLAG "3")
+  set(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} "-py3")
+  set(CMAKE_SWIG_FLAGS ${CMAKE_SWIG_FLAGS} "-DWITH_PYTHON3")
 endif()
 
 if(WITH_PYTHON_GIL_RELEASE)
@@ -131,15 +95,7 @@ endif()
 # Make target
 add_custom_target(python DEPENDS _casadi)
 
-add_library(_casadi MODULE ${PYTHON_FILE})
-
-set_target_properties(_casadi PROPERTIES PREFIX "")
-if(WIN32 AND NOT CYGWIN)
-  set_target_properties(_casadi PROPERTIES SUFFIX ".pyd")
-  set(CASADI_PYTHON_LIBRARY_SUFFIX ".pyd")
-else()
-  set(CASADI_PYTHON_LIBRARY_SUFFIX ${CMAKE_SHARED_MODULE_SUFFIX})
-endif()
+python_add_library(_casadi MODULE WITH_SOABI ${PYTHON_FILE})
 
 if(APPLE AND ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU"))
   set_target_properties(_casadi PROPERTIES LINK_FLAGS "-undefined dynamic_lookup")
@@ -171,13 +127,7 @@ message("COMPILE_FLAGS: ${COMPILE_FLAGS}")
 
 set_target_properties(_casadi PROPERTIES COMPILE_FLAGS "${COMPILE_FLAGS}")
 
-if(WIN32) # dlls don't allow missing symbols
-  if(NOT PYTHON_LIBRARY)
-    message(SEND_ERROR "Python libraries not found, but required." )
-  endif()
-  target_link_libraries(_casadi ${PYTHON_LIBRARY})
-endif()
-target_link_libraries(_casadi casadi)
+target_link_libraries(_casadi PRIVATE casadi)
 
 # Custom installation command for Python
 add_custom_target(install_python
@@ -194,19 +144,11 @@ install(TARGETS _casadi
   COMPONENT install_python
 )
 
-if (SWIG_IMPORT)
 # Install Python proxy classes
 install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/target${PYTHONFLAG}/extra/casadi.py
   DESTINATION "${PYTHON_PREFIX}/casadi"
   COMPONENT install_python
 )
-else()
-# Install Python proxy classes
-install(FILES ${PROJECT_BINARY_DIR}/swig/python/casadi.py
-  DESTINATION "${PYTHON_PREFIX}/casadi"
-  COMPONENT install_python
-)
-endif()
 
 if("${PYTHON_VERSION_MAJOR}" STREQUAL "3")
   # Install Python tools
@@ -265,7 +207,6 @@ if (WITH_EXTENDING_CASADI)
   elseif("${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
     set_target_properties(_extending_casadi PROPERTIES COMPILE_FLAGS "-Wno-dynamic-class-memaccess -Wno-self-assign -Wno-maybe-uninitialized ${MAYBE_WERROR} -fno-builtin-strdup -fno-builtin-strndup")
   endif()
-  set(CASADI_PYTHON_LIBRARY ${SWIG_MODULE_extending_casadi_REAL_NAME}${CASADI_PYTHON_LIBRARY_SUFFIX})
 
   add_custom_target(extending_casadi_python DEPENDS _extending_casadi extending_casadi)
 
-- 
2.39.5 (Apple Git-154)

